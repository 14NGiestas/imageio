# Travis CI configuration file for imageio
# Validate this at http://lint.travis-ci.org/

language: python

python:
    # - We do unit tests in all envs
    # - Style tests only in 2.7
    # - Image test (todo)
    
    #- "pypy3"  numpy support is really bad right now
    - "2.6"  # lowest that we want to support
    - "2.7"  # native Python, has numpy
    - "3.2"  # runs unit tests of installed imageio
    - "3.4"  # coverage is produced here
    - "3.3"  # Test only style and size on this machine

before_install:
    - REDIRECT_TO=/dev/stdout  # change to /dev/null to silence Travis
    - sudo apt-get update -qq;
    # Install miniconda
    - if [ "${TRAVIS_PYTHON_VERSION}" == "2.7" ]; then
        echo using system Python 2.7;
      else
        wget -q http://repo.continuum.io/miniconda/Miniconda-3.7.0-Linux-x86_64.sh -O miniconda.sh;
        chmod +x miniconda.sh;
        ./miniconda.sh -b -p ~/anaconda &> ${REDIRECT_TO};
        export PATH=~/anaconda/bin:$PATH;
        conda update --yes --quiet conda &> ${REDIRECT_TO};
      fi;
    - SRC_DIR=$(pwd)
    # file size checks
    - if [ "${TRAVIS_PYTHON_VERSION}" == "3.3" ]; then
        if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
          GIT_TARGET_EXTRA="+refs/heads/${TRAVIS_BRANCH}";
          GIT_SOURCE_EXTRA="+refs/pull/${TRAVIS_PULL_REQUEST}/merge";
        else
          GIT_TARGET_EXTRA="";
          GIT_SOURCE_EXTRA="";
        fi;
        cd ~;
        mkdir target-size-clone && cd target-size-clone;
        git init &> ${REDIRECT_TO} && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &>${REDIRECT_TO};
        git fetch origin ${GIT_TARGET_EXTRA} &> ${REDIRECT_TO} && git checkout -qf FETCH_HEAD &> ${REDIRECT_TO} && cd ..;
        TARGET_SIZE=`du -s target-size-clone | sed -e "s/\t.*//"`;
        mkdir source-size-clone && cd source-size-clone;
        git init &> ${REDIRECT_TO} && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &> ${REDIRECT_TO};
        git fetch origin ${GIT_SOURCE_EXTRA} &> ${REDIRECT_TO} && git checkout -qf FETCH_HEAD &> ${REDIRECT_TO} && cd ..;
        SOURCE_SIZE=`du -s source-size-clone | sed -e "s/\t.*//"`;
        if [ "${SOURCE_SIZE}" != "${TARGET_SIZE}" ]; then
          SIZE_DIFF=`expr ${SOURCE_SIZE} - ${TARGET_SIZE}`;
        else
          SIZE_DIFF=0;
        fi;
      fi;
    - cd ${SRC_DIR}

install:
    # Install Python with numpy
    - if [ "${TRAVIS_PYTHON_VERSION}" != "2.7" ]; then
        conda create -n testenv --yes --quiet pip python=$TRAVIS_PYTHON_VERSION > ${REDIRECT_TO};
        source activate testenv > ${REDIRECT_TO};
        conda install --yes --quiet numpy > ${REDIRECT_TO};
      fi;
    # Install dependencies (also for testing)
    - if [ "${TRAVIS_PYTHON_VERSION}" == "3.3" ]; then
        pip install -q flake8;
      else
        travis_retry sudo apt-get install libfreeimage3;
        pip install -q pytest pytest-cov;
        pip install -q coveralls;
      fi;
    # Install imageio, use installed version on only one machine
    - python setup.py install > ${REDIRECT_TO}

before_script:

script: 
    - python -c "import sys; print(sys.version, '\n', sys.prefix)";
    # Run unit tests or style test
    - if [ "${TRAVIS_PYTHON_VERSION}" == "3.3" ]; then
        python make test style;
        echo "Size difference ${SIZE_DIFF} kB";
        test ${SIZE_DIFF} -lt 100;
      elif [ "${TRAVIS_PYTHON_VERSION}" == "3.2" ]; then
        python make test installed;
      else
        python make test unit;
      fi;

after_success:
    - echo == ALL TESTS PASS ==
    - if [ "${TRAVIS_PYTHON_VERSION}" == "3.4" ]; then
        coveralls;
      fi;

after_failure:
    - echo == FAILURE ==

after_script:
